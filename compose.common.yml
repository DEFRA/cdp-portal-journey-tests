services:
  ################################################################################
  # infrastructure services
  ################################################################################
  mongodb:
    image: mongo:7.0
    container_name: cdp-infra-mongodb
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - cdp-infra-mongodb-data:/data
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ ping: 1 })' && exit 0 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - cdpnet

  # Step 1: Initialize replica set
  mongodb-replica-init:
    image: mongo:7.0
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./scripts/init-replica-set.js:/init-replica-set.js
    command: mongosh --host mongodb --file /init-replica-set.js
    networks:
      - cdpnet
    restart: "no"

  # Step 2: Run data initialization scripts (after replica set is ready)
  mongodb-data-init:
    image: mongo:7.0
    depends_on:
      mongodb-replica-init:
        condition: service_completed_successfully
    volumes:
      - ./scripts/mongodb:/scripts
    command: >
      bash -c "
        echo 'Waiting for replica set to be ready...'
        until mongosh --host mongodb --eval 'rs.status().ok' --quiet; do
          echo 'Waiting for primary...'
          sleep 2
        done
        echo 'Running data initialization scripts...'
        for script in /scripts/*.js; do
          if [ -f \"$$script\" ]; then
            echo 'Running:' $$script
            mongosh --host mongodb --file $$script
          fi
        done
        echo 'Data initialization complete'
      "
    networks:
      - cdpnet
    restart: "no"

  ################################################################################
  localstack:
    image: localstack/localstack:4.3.0
    container_name: cdp-infra-localstack
    environment:
      - LOCALSTACK_HOST=127.0.0.1
      - SERVICES=s3,sqs,sns,dynamodb,firehose,secretsmanager
      - LS_LOG=WARN
    healthcheck:
      test: ["CMD", "stat", "/tmp/READY"]
      interval: 3s
      start_period: 5s
      retries: 20

  ################################################################################
  redis:
    image: redis:7.2.3-alpine3.18
    container_name: cdp-infra-redis
    healthcheck:
      test: [ "CMD", "redis-cli", "PING" ]
      interval: 5s
      start_period: 2s
      retries: 5
    restart: always

  ################################################################################
  selenium-chrome:
    image: selenium/standalone-chrome:119.0
    container_name: selenium-chrome
    ports:
      - 4444:4444
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "cdp.127.0.0.1.sslip.io:host-gateway"
      - "cdp.--1.sslip.io:host-gateway"

  ################################################################################
  cdp-portal-frontend:
    image: defradigital/cdp-portal-frontend:${CDP_PORTAL_FRONTEND:-latest}
    container_name: cdp-portal-frontend
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "cdp.127.0.0.1.sslip.io:host-gateway"
      - "cdp.--1.sslip.io:host-gateway"
    depends_on:
      cdp-portal-backend:
        condition: service_started
      cdp-self-service-ops:
        condition: service_started
      cdp-user-service-backend:
        condition: service_started
      redis:
        condition: service_healthy
      cdp-portal-stubs:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3000"]
      interval: 3s
      start_period: 2s
      retries: 3

  ################################################################################
  cdp-portal-backend:
    image: defradigital/cdp-portal-backend:${CDP_PORTAL_BACKEND:-latest}
    container_name: cdp-portal-backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "cdp.127.0.0.1.sslip.io:host-gateway"
      - "cdp.--1.sslip.io:host-gateway"
    depends_on:
      localstack:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      mongodb-data-init:
        condition: service_completed_successfully
      cdp-self-service-ops:
        condition: service_started
      cdp-user-service-backend:
        condition: service_started
      cdp-portal-stubs:
        condition: service_healthy

  ################################################################################
  cdp-user-service-backend:
    image: defradigital/cdp-user-service-backend:${CDP_USER_SERVICE_BACKEND:-latest}
    container_name: cdp-user-service-backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "cdp.127.0.0.1.sslip.io:host-gateway"
      - "cdp.--1.sslip.io:host-gateway"
    depends_on:
      localstack:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      mongodb-data-init:
        condition: service_completed_successfully
      cdp-portal-stubs:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://cdp-user-service-backend:3001/health"]
      interval: 5s
      timeout: 2s
      start_period: 60s
      retries: 30

  ################################################################################
  cdp-self-service-ops:
    image: defradigital/cdp-self-service-ops:${CDP_SELF_SERVICE_OPS:-latest}
    container_name: cdp-self-service-ops
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "cdp.127.0.0.1.sslip.io:host-gateway"
      - "cdp.--1.sslip.io:host-gateway"
    depends_on:
      localstack:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      mongodb-data-init:
        condition: service_completed_successfully
      cdp-portal-stubs:
        condition: service_healthy
    environment:
      - PORT=3009
      - ENABLE_SECURE_CONTEXT=false
    healthcheck:
      test: ["CMD", "curl", "http://cdp-self-service-ops:3009/health"]
      interval: 5s
      timeout: 2s
      start_period: 60s
      retries: 30

  ################################################################################
  cdp-portal-stubs:
    image: defradigital/cdp-portal-stubs:${CDP_PORTAL_STUBS:-latest}
    container_name: cdp-portal-stubs
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "cdp.127.0.0.1.sslip.io:host-gateway"
      - "cdp.--1.sslip.io:host-gateway"
    ports:
      - 3939:3939
    environment:
      - PORT=3939
    depends_on:
      localstack:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      mongodb-data-init:
        condition: service_completed_successfully
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "http://cdp-portal-stubs:3939/health"]
      interval: 5s
      timeout: 2s
      start_period: 20s
      retries: 10
    networks:
      - cdpnet

  ################################################################################
  cdp-notify:
    image: defradigital/cdp-notify:${CDP_NOTIFY:-latest}
    container_name: cdp-notify
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "cdp.127.0.0.1.sslip.io:host-gateway"
      - "cdp.--1.sslip.io:host-gateway"
    environment:
      - PORT=3007
    depends_on:
      localstack:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      mongodb-data-init:
        condition: service_completed_successfully
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "http://cdp-notify:3007/health"]
      interval: 5s
      timeout: 2s
      start_period: 20s
      retries: 10
    networks:
      - cdpnet

  ################################################################################

volumes:
  cdp-infra-mongodb-data:

networks:
  cdpnet:
    driver: bridge
